From 0b294e1c77d3ae98bb6d0d2614b321d1de39cd43 Mon Sep 17 00:00:00 2001
From: Broadcom Wiced <broadcom_wiced@broadcom.local>
Date: Tue, 19 Sep 2017 14:05:18 -0700
Subject: [PATCH 4/6] Add FreeRTOS + Cortex-R support

Adds Cortex-R support to FreeRTOS in OpenOCD. This allows for
proper OS awareness to view thread information.
---
 src/rtos/FreeRTOS.c                | 14 ++++++++++++++
 src/rtos/rtos_standard_stackings.c | 17 ++++-------------
 2 files changed, 18 insertions(+), 13 deletions(-)

diff --git a/src/rtos/FreeRTOS.c b/src/rtos/FreeRTOS.c
index 27f8ff46..41712fa5 100644
--- a/src/rtos/FreeRTOS.c
+++ b/src/rtos/FreeRTOS.c
@@ -68,6 +68,20 @@ static const struct FreeRTOS_params FreeRTOS_params_list[] = {
 	&rtos_standard_Cortex_M4F_FPU_stacking,
 	},
 	{
+	"cortex_r4",			/* target_name */
+	4,						/* thread_count_width; */
+	4,						/* pointer_width; */
+	16,						/* list_next_offset; */
+	20,						/* list_width; */
+	8,						/* list_elem_next_offset; */
+	12,						/* list_elem_content_offset */
+	0,						/* thread_stack_offset; */
+	52,						/* thread_name_offset; */
+	&rtos_standard_Cortex_R4_stacking,	/* stacking_info */
+	NULL,
+	NULL,
+	},
+	{
 	"hla_target",			/* target_name */
 	4,						/* thread_count_width; */
 	4,						/* pointer_width; */
diff --git a/src/rtos/rtos_standard_stackings.c b/src/rtos/rtos_standard_stackings.c
index 0176c01a..fa82d366 100644
--- a/src/rtos/rtos_standard_stackings.c
+++ b/src/rtos/rtos_standard_stackings.c
@@ -98,19 +98,10 @@ static const struct stack_register_offset rtos_standard_Cortex_R4_stack_offsets[
 	{ 0x30, 32 },		/* r10 (sl) */
 	{ 0x34, 32 },		/* r11 (fp) */
 	{ 0x38, 32 },		/* r12 (ip) */
-	{ -2,   32 },		/* sp   */
+	{ REGISTER_IS_STACK_POINTER,   32 },		/* sp   */
 	{ 0x3c, 32 },		/* lr   */
 	{ 0x40, 32 },		/* pc   */
-	{ -1,   96 },		/* FPA1 */
-	{ -1,   96 },		/* FPA2 */
-	{ -1,   96 },		/* FPA3 */
-	{ -1,   96 },		/* FPA4 */
-	{ -1,   96 },		/* FPA5 */
-	{ -1,   96 },		/* FPA6 */
-	{ -1,   96 },		/* FPA7 */
-	{ -1,   96 },		/* FPA8 */
-	{ -1,   32 },		/* FPS  */
-	{ 0x04, 32 },		/* CSPR */
+	{ 0x44, 32 },		/* CSPR */
 };
 
 static const struct stack_register_offset rtos_standard_NDS32_N1068_stack_offsets[] = {
@@ -256,8 +247,8 @@ const struct rtos_register_stacking rtos_standard_Cortex_M4F_FPU_stacking = {
 const struct rtos_register_stacking rtos_standard_Cortex_R4_stacking = {
 	0x48,				/* stack_registers_size */
 	-1,					/* stack_growth_direction */
-	26,					/* num_output_registers */
-	rtos_generic_stack_align8,	/* stack_alignment */
+	17,					/* num_output_registers */
+	rtos_generic_stack_align8,					/* stack_alignment */
 	rtos_standard_Cortex_R4_stack_offsets	/* register_offsets */
 };
 
-- 
2.14.2

